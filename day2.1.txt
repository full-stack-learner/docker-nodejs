
Multi-stage docker build

FROM node as prod
ENV NODE_ENV=production
COPY package*.json ./
RUN npm install && npm cache clean --force
COPY . .
CMD ["node", "./bin/www"]

FROM prod as dev
ENV NODE_ENV=development
CMD ["nodemon", "./bin/www", "--inspect=0.0.0.0:9229"]

Build dev stage image from dev stage

> docker build -t myapp .

Build prod stage image from prod stage

> docker build -t myapp:prod --target prod .


3-stage (prod, dev, test) docker build

FROM node:10-slim as prod
ENV NODE_ENV=production
COPY package*.json ./
RUN npm install --only=production && npm cache clean --force
COPY . .
CMD ["node", "./bin/www"]

FROM prod as dev
ENV NODE_ENV=development
RUN npm install --only=development
CMD ["../node_modules/nodemon/bin/nodemon.js", "./bin/www", "--inspect=0.0.0.0:922"]

FROM dev as test
ENV NODE_ENV=development
CMD ["npm", "test"]

> docker build -t multistage --target prod . && docker run multistage
> docker build -t multistage:dev --target dev . && docker run --init -p 3000:3000 multistage:dev
> docker build -t multistage:test --target test . && docker run --init multistage:test





































































